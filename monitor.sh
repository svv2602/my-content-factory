#!/bin/bash

# üìä –°–∫—Ä–∏–ø—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∫–æ–Ω—Ç–µ–Ω—Ç-—Ñ–∞–±—Ä–∏–∫–∏

echo "üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∫–æ–Ω—Ç–µ–Ω—Ç-—Ñ–∞–±—Ä–∏–∫–∏ n8n"
echo "=================================="

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞
check_status() {
    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
    
    if command -v docker-compose &> /dev/null; then
        COMPOSE_CMD="docker-compose"
    else
        COMPOSE_CMD="docker compose"
    fi
    
    # –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
    $COMPOSE_CMD ps
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è n8n
    echo ""
    echo "üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è n8n..."
    
    if curl -s http://localhost:5678/healthz &> /dev/null; then
        echo "‚úÖ n8n –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ http://localhost:5678"
    else
        echo "‚ùå n8n –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
        echo "üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: $COMPOSE_CMD logs n8n"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤
show_logs() {
    echo "üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ n8n:"
    echo "======================"
    
    if command -v docker-compose &> /dev/null; then
        docker-compose logs --tail=50 n8n
    else
        docker compose logs --tail=50 n8n
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤
check_resources() {
    echo "üíæ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤:"
    echo "========================="
    
    docker stats --no-stream --format "table {{.Container}}\t{{.CPUPerc}}\t{{.MemUsage}}\t{{.MemPerc}}"
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ
check_disk_space() {
    echo "üíø –ú–µ—Å—Ç–æ –Ω–∞ –¥–∏—Å–∫–µ:"
    echo "=================="
    
    echo "–û–±—â–µ–µ –º–µ—Å—Ç–æ –Ω–∞ –¥–∏—Å–∫–µ:"
    df -h /
    
    echo ""
    echo "–ú–µ—Å—Ç–æ, –∑–∞–Ω–∏–º–∞–µ–º–æ–µ n8n:"
    du -sh n8n_data/
    
    echo ""
    echo "Docker images:"
    docker images --format "table {{.Repository}}\t{{.Tag}}\t{{.Size}}" | grep n8n
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
check_env() {
    echo "üîß –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ .env:"
    echo "============================="
    
    if [ ! -f ".env" ]; then
        echo "‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω!"
        return 1
    fi
    
    source .env
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
    vars_to_check=(
        "TELEGRAM_BOT_TOKEN"
        "TELEGRAM_CHAT_ID"
        "OPENROUTER_API_KEY"
        "ELEVENLABS_API_KEY"
        "HEYGEN_API_KEY"
        "OPENAI_API_KEY"
        "PIAPI_API_KEY"
    )
    
    for var in "${vars_to_check[@]}"; do
        if [ -n "${!var}" ] && [[ "${!var}" != *"YOUR_"* ]]; then
            echo "‚úÖ $var –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
        else
            echo "‚ùå $var –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
        fi
    done
}

# –§—É–Ω–∫—Ü–∏—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
backup_data() {
    echo "üíæ –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏..."
    
    timestamp=$(date +"%Y%m%d_%H%M%S")
    backup_dir="backups/backup_$timestamp"
    
    mkdir -p "$backup_dir"
    
    # –ö–æ–ø–∏—Ä—É–µ–º –≤–∞–∂–Ω—ã–µ —Ñ–∞–π–ª—ã
    cp .env "$backup_dir/" 2>/dev/null
    cp -r n8n_data/database.sqlite* "$backup_dir/" 2>/dev/null
    cp n8n-telegram-improved.json "$backup_dir/" 2>/dev/null
    cp n8n-local-improved.json "$backup_dir/" 2>/dev/null
    
    echo "‚úÖ –†–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞: $backup_dir"
}

# –û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é
case "$1" in
    "status"|"")
        check_status
        ;;
    "logs")
        show_logs
        ;;
    "resources")
        check_resources
        ;;
    "disk")
        check_disk_space
        ;;
    "env")
        check_env
        ;;
    "backup")
        backup_data
        ;;
    "full")
        check_status
        echo ""
        check_env
        echo ""
        check_resources
        echo ""
        check_disk_space
        ;;
    "help")
        echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
        echo "  status     - —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)"
        echo "  logs       - –ø—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤"
        echo "  resources  - –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤"
        echo "  disk       - –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞"
        echo "  env        - –ø—Ä–æ–≤–µ—Ä–∫–∞ .env –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"
        echo "  backup     - —Å–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏"
        echo "  full       - –ø–æ–ª–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞"
        echo "  help       - —ç—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞"
        ;;
    *)
        echo "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: $1"
        echo "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: ./monitor.sh help"
        exit 1
        ;;
esac

